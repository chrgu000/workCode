<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- Spring Quartz 定时任务动态执行 -->
    <bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <!-- 持久化到数据库，这样就会实现quartz的集群模式
            startupDelay 延时启动60秒，更快加载Bean
                      如果不配置configLocation 那么默认使用quartz配置
                        使用spring托管的datasource，则spring会强制使用这个jobstore、LocalDataSourceJobStore
         -->
        <property name="configLocation" value="classpath:/quartz/quartz.properties" />
        <property name="dataSource" ref="dataSource" />
        <property name="startupDelay" value="60" />
        <property name="transactionManager" ref="transactionManager"/>
        <property name="schedulerName" value="baseScheduler"/>
        <!-- 每台集群机器部署应用的时候会更新触发器-->
        <property name="overwriteExistingJobs" value="false"/>
    </bean>


</beans>